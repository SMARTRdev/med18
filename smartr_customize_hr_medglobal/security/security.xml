<?xml version="1.0" encoding="UTF-8" ?>
<odoo>
    <data noupdate="0">
        <!-- hr.employee -->

        <record id="group_hr_restricted_manager" model="res.groups">
            <field name="name">Restricted Administrator</field>
            <field name="category_id" ref="base.module_category_human_resources_employees"/>
            <field name="implied_ids" eval="[(4, ref('hr.group_hr_user'))]"/>
        </record>

        <record id="hr.group_hr_manager" model="res.groups">
            <field name="implied_ids" eval="[(4, ref('smartr_customize_hr_medglobal.group_hr_restricted_manager'))]"/>
        </record>

        <record id="hr_employee_restricted_manager_rule" model="ir.rule">
            <field name="name">Restrict Employees: Restricted Administrator</field>
            <field name="model_id" ref="hr.model_hr_employee"/>
            <field name="groups" eval="[(4, ref('smartr_customize_hr_medglobal.group_hr_restricted_manager'))]"/>
            <field name="domain_force">[('in_sub_company','=',True)]</field>
        </record>
        <record id="all_hr_employee_manager_rule" model="ir.rule">
            <field name="name">All Employees: Administrator</field>
            <field name="model_id" ref="hr.model_hr_employee"/>
            <field name="groups" eval="[(4, ref('hr.group_hr_manager'))]"/>
            <field name="domain_force">[(1,'=',1)]</field>
        </record>

        <!-- hr.contract -->
        <record id="group_hr_contract_restricted_manager" model="res.groups">
            <field name="name">Restricted Administrator</field>
            <field name="category_id" ref="base.module_category_human_resources_contracts"/>
            <field name="implied_ids" eval="[(4, ref('hr_contract.group_hr_contract_employee_manager'))]"/>
        </record>

        <function name="write" model="ir.model.data">
            <value model="ir.model.data"
                   search="[('module', '=', 'hr_contract'), ('name', '=', 'group_hr_contract_manager')]"/>
            <value eval="{'noupdate': False}"/>
        </function>

        <record id="hr_contract.group_hr_contract_manager" model="res.groups">
            <field name="implied_ids"
                   eval="[(6,0, [ref('smartr_customize_hr_medglobal.group_hr_contract_restricted_manager'),ref('hr.group_hr_user'),ref('sign.group_sign_user')])]"/>
        </record>

        <record id="hr_contract_restricted_manager_rule" model="ir.rule">
            <field name="name">Restrict Contracts: Restricted Administrator</field>
            <field name="model_id" ref="hr_contract.model_hr_contract"/>
            <field name="groups"
                   eval="[(4, ref('smartr_customize_hr_medglobal.group_hr_contract_restricted_manager'))]"/>
            <field name="domain_force">[('employee_id.in_sub_company','=',True)]</field>
        </record>

        <!-- hr.payslip -->
        <record id="group_hr_payroll_restricted_manager" model="res.groups">
            <field name="name">Restricted Administrator</field>
            <field name="category_id" ref="base.module_category_human_resources_payroll"/>
            <field name="implied_ids"
                   eval="[(4, ref('hr_payroll.group_hr_payroll_user')),(4, ref('smartr_customize_hr_medglobal.group_hr_contract_restricted_manager'))]"/>
        </record>

        <function name="write" model="ir.model.data">
            <value model="ir.model.data"
                   search="[('module', '=', 'hr_payroll'), ('name', '=', 'group_hr_payroll_user')]"/>
            <value eval="{'noupdate': False}"/>
        </function>

        <record id="hr_payroll.group_hr_payroll_user" model="res.groups">
            <field name="implied_ids"
                   eval="[(6,0, [ref('hr.group_hr_user'),ref('hr_contract.group_hr_contract_employee_manager'),ref('hr_holidays.group_hr_holidays_user')])]"/>
        </record>


        <function name="write" model="ir.model.data">
            <value model="ir.model.data"
                   search="[('module', '=', 'hr_payroll'), ('name', '=', 'group_hr_payroll_manager')]"/>
            <value eval="{'noupdate': False}"/>
        </function>

        <record id="hr_payroll.group_hr_payroll_manager" model="res.groups">
            <field name="implied_ids"
                   eval="[(6,0, [ref('smartr_customize_hr_medglobal.group_hr_payroll_restricted_manager'),ref('hr_contract.group_hr_contract_manager'),ref('hr_holidays.group_hr_holidays_user')])]"/>
        </record>

        <record id="hr_payslip_restricted_manager_rule" model="ir.rule">
            <field name="name">Restrict Payslips: Restricted Administrator</field>
            <field name="model_id" ref="hr_payroll.model_hr_payslip"/>
            <field name="groups"
                   eval="[(4, ref('smartr_customize_hr_medglobal.group_hr_payroll_restricted_manager'))]"/>
            <field name="domain_force">[('employee_id.in_sub_company','=',True)]</field>
        </record>


        <function name="write" model="ir.model.data">
            <value model="ir.model.data"
                   search="[('module', '=', 'approvals'), ('name', '=', 'approval_request_request_approver_rule')]"/>
            <value eval="{'noupdate': False}"/>
        </function>

        <function name="write" model="ir.model.data">
            <value model="ir.model.data"
                   search="[('module', '=', 'approvals'), ('name', '=', 'approval_request_unlink_request_owner_rule')]"/>
            <value eval="{'noupdate': False}"/>
        </function>

        <record id="approvals.approval_request_request_approver_rule" model="ir.rule">
            <field name="domain_force">[('category_id','in',user.allowed_approval_category_ids.ids),'|', '|',
                ('request_owner_id', '=', user.id),
                ('approver_ids.user_id','=', user.id),
                '&amp;',
                ('category_id.manager_approval', 'in', ['approver', 'required']),
                ('request_owner_id.parent_id.user_id', '=', user.id)]
            </field>
        </record>

        <record id="approvals.approval_request_unlink_request_owner_rule" model="ir.rule">
            <field name="domain_force">[('request_owner_id', '=', user.id), ('request_status', 'in', ['cancel',
                'new']),('category_id','in',user.allowed_approval_category_ids.ids)]
            </field>
        </record>

        <record id="approval_category_user_rule" model="ir.rule">
            <field name="name">Approval Categories: Restrict User</field>
            <field name="model_id" ref="approvals.model_approval_category"/>
            <field name="domain_force">[('id','in',user.allowed_approval_category_ids.ids)]</field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
        </record>

        <record id="approval_category_approval_user_rule" model="ir.rule">
            <field name="name">Approval Categories: Restrict Approval User</field>
            <field name="model_id" ref="approvals.model_approval_category"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('approvals.group_approval_user'))]"/>
        </record>
    </data>
</odoo>