<?xml version="1.0" encoding="UTF-8" ?>
<odoo>
    <data noupdate="0">
        <record id="module_category_restrict_employees" model="ir.module.category">
            <field name="name">Restrict Employees</field>
            <field name="sequence">10</field>
        </record>

        <record id="group_restricted_main_company_employees_only" model="res.groups">
            <field name="name">Restricted to Main Company Employees Only</field>
            <field name="category_id" ref="smartr_customize_hr_medglobal.module_category_restrict_employees"/>
        </record>

        <record id="group_restricted_sub_company_employees_only" model="res.groups">
            <field name="name">Restricted to Sub Company Employees Only</field>
            <field name="category_id" ref="smartr_customize_hr_medglobal.module_category_restrict_employees"/>
        </record>

        <!-- hr.employee -->
        <record id="restrict_employees_main_company_rule" model="ir.rule">
            <field name="name">Restrict Employees: Main Company</field>
            <field name="model_id" ref="hr.model_hr_employee"/>
            <field name="groups"
                   eval="[(4, ref('smartr_customize_hr_medglobal.group_restricted_main_company_employees_only'))]"/>
            <field name="domain_force">[('in_sub_company','=',False)]</field>
        </record>

        <record id="restrict_employees_sub_company_rule" model="ir.rule">
            <field name="name">Restrict Employees: Sub Company</field>
            <field name="model_id" ref="hr.model_hr_employee"/>
            <field name="groups"
                   eval="[(4, ref('smartr_customize_hr_medglobal.group_restricted_sub_company_employees_only'))]"/>
            <field name="domain_force">[('in_sub_company','=',True)]</field>
        </record>

        <!-- hr.contract -->
        <record id="restrict_contracts_main_company_rule" model="ir.rule">
            <field name="name">Restrict Contracts: Main Company</field>
            <field name="model_id" ref="hr_contract.model_hr_contract"/>
            <field name="groups"
                   eval="[(4, ref('smartr_customize_hr_medglobal.group_restricted_main_company_employees_only'))]"/>
            <field name="domain_force">[('employee_id.in_sub_company','=',False)]</field>
        </record>

        <record id="restrict_contracts_sub_company_rule" model="ir.rule">
            <field name="name">Restrict Contracts: Sub Company</field>
            <field name="model_id" ref="hr_contract.model_hr_contract"/>
            <field name="groups"
                   eval="[(4, ref('smartr_customize_hr_medglobal.group_restricted_sub_company_employees_only'))]"/>
            <field name="domain_force">[('employee_id.in_sub_company','=',True)]</field>
        </record>

        <!-- hr.payslip -->
        <record id="restrict_payslips_main_company_rule" model="ir.rule">
            <field name="name">Restrict Payslips: Main Company</field>
            <field name="model_id" ref="hr_payroll.model_hr_payslip"/>
            <field name="groups"
                   eval="[(4, ref('smartr_customize_hr_medglobal.group_restricted_main_company_employees_only'))]"/>
            <field name="domain_force">[('employee_id.in_sub_company','=',False)]</field>
        </record>

        <record id="restrict_payslips_sub_company_rule" model="ir.rule">
            <field name="name">Restrict Payslips: Sub Company</field>
            <field name="model_id" ref="hr_payroll.model_hr_payslip"/>
            <field name="groups"
                   eval="[(4, ref('smartr_customize_hr_medglobal.group_restricted_sub_company_employees_only'))]"/>
            <field name="domain_force">[('employee_id.in_sub_company','=',True)]</field>
        </record>


        <function name="write" model="ir.model.data">
            <value model="ir.model.data"
                   search="[('module', '=', 'approvals'), ('name', '=', 'approval_request_request_approver_rule')]"/>
            <value eval="{'noupdate': False}"/>
        </function>

        <function name="write" model="ir.model.data">
            <value model="ir.model.data"
                   search="[('module', '=', 'approvals'), ('name', '=', 'approval_request_unlink_request_owner_rule')]"/>
            <value eval="{'noupdate': False}"/>
        </function>

        <record id="approvals.approval_request_request_approver_rule" model="ir.rule">
            <field name="domain_force">[('category_id','in',user.allowed_approval_category_ids.ids),'|', '|',
                ('request_owner_id', '=', user.id),
                ('approver_ids.user_id','=', user.id),
                '&amp;',
                ('category_id.manager_approval', 'in', ['approver', 'required']),
                ('request_owner_id.parent_id.user_id', '=', user.id)]
            </field>
        </record>

        <record id="approvals.approval_request_unlink_request_owner_rule" model="ir.rule">
            <field name="domain_force">[('request_owner_id', '=', user.id), ('request_status', 'in', ['cancel',
                'new']),('category_id','in',user.allowed_approval_category_ids.ids)]
            </field>
        </record>

        <record id="approval_category_user_rule" model="ir.rule">
            <field name="name">Approval Categories: Restrict User</field>
            <field name="model_id" ref="approvals.model_approval_category"/>
            <field name="domain_force">[('id','in',user.allowed_approval_category_ids.ids)]</field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
        </record>

        <record id="approval_category_approval_user_rule" model="ir.rule">
            <field name="name">Approval Categories: Restrict Approval User</field>
            <field name="model_id" ref="approvals.model_approval_category"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('approvals.group_approval_user'))]"/>
        </record>
    </data>
</odoo>